#!/bin/bash

TRANSPOSE_BOOL(){
    if [ $1 = "N" ]
    then
        echo "false"
    else
        echo "true"
    fi
}

echo "//this code is generated by gen_tensmul_blas.sh
#include \"../../../../include/monolish_blas.hpp\"
#include \"../../../internal/monolish_internal.hpp\"
#include \"tensor_dense-tensor_dense_tensmul.hpp\"
#include \"tensor_crs-tensor_dense_tensmul.hpp\"

namespace monolish::blas {
"

## tensmul tensor_Dense-tensor_Dense
for prec in double float; do
  for arg1 in tensor::tensor_Dense\<$prec\> view_tensor_Dense\<vector\<$prec\>,$prec\> view_tensor_Dense\<matrix::Dense\<$prec\>,$prec\> view_tensor_Dense\<tensor::tensor_Dense\<$prec\>,$prec\>; do
    for arg2 in tensor::tensor_Dense\<$prec\> view_tensor_Dense\<vector\<$prec\>,$prec\> view_tensor_Dense\<matrix::Dense\<$prec\>,$prec\> view_tensor_Dense\<tensor::tensor_Dense\<$prec\>,$prec\>; do
      for arg3 in tensor::tensor_Dense\<$prec\> view_tensor_Dense\<vector\<$prec\>,$prec\> view_tensor_Dense\<matrix::Dense\<$prec\>,$prec\> view_tensor_Dense\<tensor::tensor_Dense\<$prec\>,$prec\>; do

        if [ $prec = "double" ]
        then
          echo "void tensmul(const $arg1 &A, const $arg2 &B, $arg3 &C){tensor_Dense_tensor_Dense_Dtensmul_core(1.0, A, B, 0.0, C, false, false);}"
          echo "void tensmul(const $prec &a, const $arg1 &A, const $arg2 &B, const $prec &b, $arg3 &C){tensor_Dense_tensor_Dense_Dtensmul_core(a, A, B, b, C, false, false);}"
        else
          echo "void tensmul(const $arg1 &A, const $arg2 &B, $arg3 &C){tensor_Dense_tensor_Dense_Stensmul_core(1.0, A, B, 0.0, C, false, false);}"
          echo "void tensmul(const $prec &a, const $arg1 &A, const $arg2 &B, const $prec &b, $arg3 &C){tensor_Dense_tensor_Dense_Stensmul_core(a, A, B, b, C, false, false);}"
        fi
      done
    done
  done
done

echo ""

## tensmul tensor_CRS-tensor_Dense
for prec in double float; do
  for arg1 in tensor::tensor_CRS\<$prec\>; do
    for arg2 in tensor::tensor_Dense\<$prec\> view_tensor_Dense\<vector\<$prec\>,$prec\> view_tensor_Dense\<matrix::Dense\<$prec\>,$prec\> view_tensor_Dense\<tensor::tensor_Dense\<$prec\>,$prec\>; do
      for arg3 in tensor::tensor_Dense\<$prec\> view_tensor_Dense\<vector\<$prec\>,$prec\> view_tensor_Dense\<matrix::Dense\<$prec\>,$prec\> view_tensor_Dense\<tensor::tensor_Dense\<$prec\>,$prec\>; do

        if [ $prec = "double" ]
        then
          echo "void tensmul(const $arg1 &A, const $arg2 &B, $arg3 &C){tensor_CRS_tensor_Dense_Dtensmul_core(1.0, A, B, 0.0, C);}"
          echo "void tensmul(const $prec &a, const $arg1 &A, const $arg2 &B, const $prec &b, $arg3 &C){tensor_CRS_tensor_Dense_Dtensmul_core(a, A, B, b, C);}"
        else
          echo "void tensmul(const $arg1 &A, const $arg2 &B, $arg3 &C){tensor_CRS_tensor_Dense_Stensmul_core(1.0, A, B, 0.0, C);}"
          echo "void tensmul(const $prec &a, const $arg1 &A, const $arg2 &B, const $prec &b, $arg3 &C){tensor_CRS_tensor_Dense_Stensmul_core(a, A, B, b, C);}"
        fi
      done
    done
  done
done

echo ""

echo "}"
