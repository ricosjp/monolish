// this code is generated by gen_tensvec_blas.sh
#include "../../../../include/monolish_blas.hpp"
#include "../../../internal/monolish_internal.hpp"
#include "tensor_crs_tensvec.hpp"
#include "tensor_dense_tensvec.hpp"

namespace monolish::blas {

void tensvec(const tensor::tensor_Dense<double> &A, const vector<double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const vector<double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A, const vector<double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A, const vector<double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A, const vector<double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b, tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b, view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x, tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b, tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b, view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x, tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b, tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b, view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x, tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b, tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b, view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a,
             const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A, const vector<float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const vector<float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A, const vector<float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A, const vector<float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A, const vector<float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b, tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b, view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x, tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b, tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b, view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x, tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b, tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b, view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x, tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b, tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b, view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a,
             const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}

void tensvec(const tensor::tensor_CRS<double> &A, const vector<double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const vector<double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A, const vector<double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A, const vector<double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A, const vector<double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const vector<double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x, const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b, tensor::tensor_Dense<double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b, view_tensor_Dense<vector<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b,
             view_tensor_Dense<matrix::Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const double &a, const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             const double &b,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y) {
  Dtensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A, const vector<float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const vector<float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A, const vector<float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A, const vector<float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A, const vector<float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const vector<float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x, const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b, tensor::tensor_Dense<float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b, view_tensor_Dense<vector<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b,
             view_tensor_Dense<matrix::Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(1.0, A, x, 0.0, y, false);
}
void tensvec(const float &a, const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             const float &b,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y) {
  Stensvec_core(a, A, x, b, y, false);
}

} // namespace monolish::blas
