#!/bin/bash

TRANSPOSE_BOOL(){
    if [ $1 = "N" ]
    then
        echo "false"
    else
        echo "true"
    fi
}

echo "//this code is generated by gen_tensvec_blas.sh
#include \"../../../../include/monolish_blas.hpp\"
#include \"../../../internal/monolish_internal.hpp\"
#include \"tensor_dense_tensvec.hpp\"
#include \"tensor_crs_tensvec.hpp\"

namespace monolish::blas {
"


## tensvec Dense
for prec in double float; do
  for arg1 in tensor::tensor_Dense\<$prec\> view_tensor_Dense\<vector\<$prec\>,$prec\> view_tensor_Dense\<matrix::Dense\<$prec\>,$prec\> view_tensor_Dense\<tensor::tensor_Dense\<$prec\>,$prec\>; do
    for arg2 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
      for arg3 in tensor::tensor_Dense\<$prec\> view_tensor_Dense\<vector\<$prec\>,$prec\> view_tensor_Dense\<matrix::Dense\<$prec\>,$prec\> view_tensor_Dense\<tensor::tensor_Dense\<$prec\>,$prec\>; do
        if [ $prec = "double" ]
        then
          echo "void tensvec(const $arg1 &A, const $arg2 &x, $arg3 &y){Dtensvec_core(1.0, A, x, 0.0, y, false);}"
          echo "void tensvec(const $prec &a, const $arg1 &A, const $arg2 &x, const $prec &b, $arg3 &y){Dtensvec_core(a, A, x, b, y, false);}"
        else
          echo "void tensvec(const $arg1 &A, const $arg2 &x, $arg3 &y){Stensvec_core(1.0, A, x, 0.0, y, false);}"
          echo "void tensvec(const $prec &a, const $arg1 &A, const $arg2 &x, const $prec &b, $arg3 &y){Stensvec_core(a, A, x, b, y, false);}"
        fi
      done
    done
  done
done

echo ""

## tensvec CRS
for prec in double float; do
  for arg1 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
    for arg2 in tensor::tensor_Dense\<$prec\> view_tensor_Dense\<vector\<$prec\>,$prec\> view_tensor_Dense\<matrix::Dense\<$prec\>,$prec\> view_tensor_Dense\<tensor::tensor_Dense\<$prec\>,$prec\>; do
      if [ $prec = "double" ]
      then
        echo "void tensvec(const tensor::tensor_CRS<$prec> &A, const $arg1 &x, $arg2 &y){Dtensvec_core(1.0, A, x, 0.0, y, false);}"
        echo "void tensvec(const $prec &a, const tensor::tensor_CRS<$prec> &A, const $arg1 &x, const $prec &b, $arg2 &y){Dtensvec_core(a, A, x, b, y, false);}"
      else
        echo "void tensvec(const tensor::tensor_CRS<$prec> &A, const $arg1 &x, $arg2 &y){Stensvec_core(1.0, A, x, 0.0, y, false);}"
        echo "void tensvec(const $prec &a, const tensor::tensor_CRS<$prec> &A, const $arg1 &x, const $prec &b, $arg2 &y){Stensvec_core(a, A, x, b, y, false);}"
      fi
    done
  done
done

echo ""

echo "}"
