#!/bin/bash

TRANSPOSE_BOOL(){
    if [ $1 = "N" ]
    then
        echo "false"
    else
        echo "true"
    fi
}

echo "//this code is generated by gen_matvec_blas.sh
#include \"../../../../include/monolish_blas.hpp\"
#include \"../../../internal/monolish_internal.hpp\"
#include \"crs_matvec.hpp\"
#include \"dense_matvec.hpp\"
#include \"linearoperator_matvec.hpp\"

namespace monolish::blas {
"


## matvec Dense
for prec in double float; do
  for arg1 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
    for arg2 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
      for arg3 in matrix::Dense\<$prec\> view_Dense\<vector\<$prec\>,$prec\> view_Dense\<matrix::Dense\<$prec\>,$prec\> view_Dense\<tensor::tensor_Dense\<$prec\>,$prec\>; do
        if [ $prec = "double" ]
        then
          echo "void matvec(const $arg3 &A, const $arg1 &x, $arg2 &y){Dmatvec_core(1.0, A, x, 0.0, y, false);}"
          echo "void matvec(const $prec &a, const $arg3 &A, const $arg1 &x, const $prec &b, $arg2 &y){Dmatvec_core(a, A, x, b, y, false);}"
        else
          echo "void matvec(const $arg3 &A, const $arg1 &x, $arg2 &y){Smatvec_core(1.0, A, x, 0.0, y, false);}"
          echo "void matvec(const $prec &a, const $arg3 &A, const $arg1 &x, const $prec &b, $arg2 &y){Smatvec_core(a, A, x, b, y, false);}"
        fi
      done
    done
  done
done

echo ""

## matvec_* Dense
for trans in N T; do
  for prec in double float; do
    for arg1 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
      for arg2 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
        for arg3 in matrix::Dense\<$prec\> view_Dense\<vector\<$prec\>,$prec\> view_Dense\<matrix::Dense\<$prec\>,$prec\> view_Dense\<tensor::tensor_Dense\<$prec\>,$prec\>; do
          if [ $prec = "double" ]
          then
            T=`TRANSPOSE_BOOL $trans`
            echo "void matvec_$trans(const $arg3 &A, const $arg1 &x, $arg2 &y){Dmatvec_core(1.0, A, x, 0.0, y, $T);}"
            echo "void matvec_$trans(const $prec &a, const $arg3 &A, const $arg1 &x, const $prec &b, $arg2 &y){Dmatvec_core(a, A, x, b, y, $T);}"
          else
            T=`TRANSPOSE_BOOL $trans`
            echo "void matvec_$trans(const $arg3 &A, const $arg1 &x, $arg2 &y){Smatvec_core(1.0, A, x, 0.0, y, $T);}"
            echo "void matvec_$trans(const $prec &a, const $arg3 &A, const $arg1 &x, const $prec &b, $arg2 &y){Smatvec_core(a, A, x, b, y, $T);}"
          fi
        done
      done
    done
  done
done

echo ""

## matvec CRS
for prec in double float; do
  for arg1 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
    for arg2 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
      if [ $prec = "double" ]
      then
        echo "void matvec(const matrix::CRS<$prec> &A, const $arg1 &x, $arg2 &y){Dmatvec_core(1.0, A, x, 0.0, y, false);}"
        echo "void matvec(const $prec &a, const matrix::CRS<$prec> &A, const $arg1 &x, const $prec &b, $arg2 &y){Dmatvec_core(a, A, x, b, y, false);}"
      else
        echo "void matvec(const matrix::CRS<$prec> &A, const $arg1 &x, $arg2 &y){Smatvec_core(1.0, A, x, 0.0, y, false);}"
        echo "void matvec(const $prec &a, const matrix::CRS<$prec> &A, const $arg1 &x, const $prec &b, $arg2 &y){Smatvec_core(a, A, x, b, y, false);}"
      fi
    done
  done
done

echo ""

## matvec CRS
for trans in N T; do
    for prec in double float; do
        for arg1 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
            for arg2 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
                if [ $prec = "double" ]
                then
                    T=`TRANSPOSE_BOOL $trans`
                    echo "void matvec_$trans(const matrix::CRS<$prec> &A, const $arg1 &x, $arg2 &y){Dmatvec_core(1.0, A, x, 0.0, y, $T);}"
                    echo "void matvec_$trans(const $prec &a, const matrix::CRS<$prec> &A, const $arg1 &x, const $prec &b, $arg2 &y){Dmatvec_core(a, A, x, b, y, $T);}"
                else
                    T=`TRANSPOSE_BOOL $trans`
                    echo "void matvec_$trans(const matrix::CRS<$prec> &A, const $arg1 &x, $arg2 &y){Smatvec_core(1.0, A, x, 0.0, y, $T);}"
                    echo "void matvec_$trans(const $prec &a, const matrix::CRS<$prec> &A, const $arg1 &x, const $prec &b, $arg2 &y){Smatvec_core(a, A, x, b, y, $T);}"
                fi
            done
        done
    done
done

echo ""

## matvec LinearOperator
for prec in double float; do
  for arg1 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
    for arg2 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
      echo "void matvec(const matrix::LinearOperator<$prec> &A, const $arg1 &x, $arg2 &y){matvec_core(A, x, y);}"
    done
  done
done

## rmatvec LinearOperator
for prec in double float; do
  for arg1 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
    for arg2 in vector\<$prec\> view1D\<vector\<$prec\>,$prec\> view1D\<matrix::Dense\<$prec\>,$prec\> view1D\<tensor::tensor_Dense\<$prec\>,$prec\>; do
      echo "void rmatvec(const matrix::LinearOperator<$prec> &A, const $arg1 &x, $arg2 &y){rmatvec_core(A, x, y);}"
    done
  done
done

echo "}"
