// this code is generated by gen_tensvec_blas.sh
#pragma once
#include "../common/monolish_common.hpp"

namespace monolish {
/**
 * @brief
 * Basic Linear Algebra Subprograms for Dense Matrix, Sparse Matrix, Vector and
 * Scalar
 */
namespace blas {

/**
 * @addtogroup BLASLV2
 * @{
 */

/**
 * \defgroup times monolish::blas::times
 * @brief element by element multiplication
 * @{
 */
/**
 * @brief Row-wise tensor_Dense tensor and vector times:
 * ex. C[i][j] = A[i][j] * x[j]
 * @param A tensor_Dense tensor
 * @param x monolish vector
 * @param C tensor_Dense tensor
 * @note
 * - # of computation: size
 * - Multi-threading: true
 * - GPU acceleration: true
 *    - # of data transfer: 0
 */
void times_row(const tensor::tensor_Dense<double> &A, const vector<double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const vector<double> &x, tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const vector<double> &x, tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const vector<double> &x, tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<float> &A, const vector<float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const vector<float> &x, tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const vector<float> &x, tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const vector<float> &x, tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
/**@}*/

/**
 * \defgroup times monolish::blas::times
 * @brief element by element multiplication
 * @{
 */
/**
 * @brief Specified row of tensor_Dense tensor and vector times:
 * ex. C[num][j] = A[num][j] * x[j]
 * @param A tensor_Dense tensor
 * @param num row number (size N)
 * @param x monolish vector
 * @param C tensor_Dense tensor
 * @note
 * - # of computation: N
 * - Multi-threading: true
 * - GPU acceleration: true
 *    - # of data transfer: 0
 */
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const vector<double> &x, tensor::tensor_Dense<double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const vector<double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const vector<float> &x, tensor::tensor_Dense<float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const vector<float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
/**@}*/

/**
 * \defgroup times monolish::blas::times
 * @brief element by element multiplication
 * @{
 */
/**
 * @brief Row-wise tensor_Dense tensor and vector times:
 * ex. C[i][j] = A[i][j] * x[j]
 * @param A tensor_Dense tensor
 * @param x monolish vector
 * @param C tensor_Dense tensor
 * @note
 * - # of computation: size
 * - Multi-threading: true
 * - GPU acceleration: true
 *    - # of data transfer: 0
 */
void times_row(const tensor::tensor_CRS<double> &A, const vector<double> &x,
               tensor::tensor_CRS<double> &C);
void times_row(const tensor::tensor_CRS<double> &A,
               const view1D<vector<double>, double> &x,
               tensor::tensor_CRS<double> &C);
void times_row(const tensor::tensor_CRS<double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_CRS<double> &C);
void times_row(const tensor::tensor_CRS<double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_CRS<double> &C);
void times_row(const tensor::tensor_CRS<float> &A, const vector<float> &x,
               tensor::tensor_CRS<float> &C);
void times_row(const tensor::tensor_CRS<float> &A,
               const view1D<vector<float>, float> &x,
               tensor::tensor_CRS<float> &C);
void times_row(const tensor::tensor_CRS<float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_CRS<float> &C);
void times_row(const tensor::tensor_CRS<float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_CRS<float> &C);
/**@}*/

/**
 * \defgroup times monolish::blas::times
 * @brief element by element multiplication
 * @{
 */
/**
 * @brief Column-wise tensor_Dense tensor and vector times:
 * ex. C[i][j] = A[i][j] * x[i]
 * @param A tensor_Dense tensor
 * @param x monolish vector
 * @param C tensor_Dense tensor
 * @note
 * - # of computation: size
 * - Multi-threading: true
 * - GPU acceleration: true
 *    - # of data transfer: 0
 */
void times_col(const tensor::tensor_Dense<double> &A, const vector<double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const vector<double> &x, tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const vector<double> &x, tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const vector<double> &x, tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<float> &A, const vector<float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const vector<float> &x, tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const vector<float> &x, tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const vector<float> &x, tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
/**@}*/

/**
 * \defgroup times monolish::blas::times
 * @brief element by element multiplication
 * @{
 */
/**
 * @brief Specified col of tensor_Dense tensor and vector times:
 * C[i][num] = A[i][num] * x[i]
 * @param A tensor_Dense tensor
 * @param num column number
 * @param x monolish vector (size M)
 * @param C tensor_Dense tensor
 * @note
 * - # of computation: M
 * - Multi-threading: true
 * - GPU acceleration: true
 *    - # of data transfer: 0
 */
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const vector<double> &x, tensor::tensor_Dense<double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<double> &A, const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const vector<double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<vector<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const vector<double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<vector<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num, const view1D<matrix::Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               tensor::tensor_Dense<double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<vector<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<matrix::Dense<double>, double> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<double>, double> &x,
               view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const vector<float> &x, tensor::tensor_Dense<float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const tensor::tensor_Dense<float> &A, const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const vector<float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<vector<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const vector<float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<vector<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num, const view1D<matrix::Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               tensor::tensor_Dense<float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<vector<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<matrix::Dense<float>, float> &C);
void times_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
               const size_t num,
               const view1D<tensor::tensor_Dense<float>, float> &x,
               view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
/**@}*/

/**
 * \defgroup times monolish::blas::adds
 * @brief element by element addition
 * @{
 */
/**
 * @brief Row-wise tensor_Dense tensor and vector adds:
 * ex. C[i][j] = A[i][j] + x[j]
 * @param A tensor_Dense tensor
 * @param x monolish vector
 * @param C tensor_Dense tensor
 * @note
 * - # of computation: size
 * - Multi-threading: true
 * - GPU acceleration: true
 *    - # of data transfer: 0
 */
void adds_row(const tensor::tensor_Dense<double> &A, const vector<double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const vector<double> &x, tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x, tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x, tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const vector<float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const vector<float> &x, tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x, tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x, tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
/**@}*/

/**
 * \defgroup times monolish::blas::adds
 * @brief element by element addition
 * @{
 */
/**
 * @brief Specified row of tensor_Dense tensor and vector adds:
 * ex. C[num][j] = A[num][j] + x[j]
 * @param A tensor_Dense tensor
 * @param num row number (size N)
 * @param x monolish vector
 * @param C tensor_Dense tensor
 * @note
 * - # of computation: N
 * - Multi-threading: true
 * - GPU acceleration: true
 *    - # of data transfer: 0
 */
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const vector<double> &x, tensor::tensor_Dense<double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const vector<double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const vector<float> &x, tensor::tensor_Dense<float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const vector<float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_row(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
/**@}*/

/**
 * \defgroup times monolish::blas::adds
 * @brief element by element addition
 * @{
 */
/**
 * @brief Column-wise tensor_Dense tensor and vector adds:
 * ex. C[i][j] = A[i][j] + x[i]
 * @param A tensor_Dense tensor
 * @param x monolish vector
 * @param C tensor_Dense tensor
 * @note
 * - # of computation: size
 * - Multi-threading: true
 * - GPU acceleration: true
 *    - # of data transfer: 0
 */
void adds_col(const tensor::tensor_Dense<double> &A, const vector<double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const vector<double> &x, tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x, tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x, tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const vector<float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const vector<float> &x, tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x, tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x, tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
/**@}*/

/**
 * \defgroup times monolish::blas::adds
 * @brief element by element addition
 * @{
 */
/**
 * @brief Specified col of tensor_Dense tensor and vector adds:
 * C[i][num] = A[i][num] + x[i]
 * @param A tensor_Dense tensor
 * @param num column number
 * @param x monolish vector (size M)
 * @param C tensor_Dense tensor
 * @note
 * - # of computation: M
 * - Multi-threading: true
 * - GPU acceleration: true
 *    - # of data transfer: 0
 */
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const vector<double> &x, tensor::tensor_Dense<double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<double> &A, const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const vector<double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<vector<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const vector<double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<vector<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num, const view1D<matrix::Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              tensor::tensor_Dense<double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<vector<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<matrix::Dense<double>, double> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<double>, double> &x,
              view_tensor_Dense<tensor::tensor_Dense<double>, double> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const vector<float> &x, tensor::tensor_Dense<float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const tensor::tensor_Dense<float> &A, const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const vector<float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<vector<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<matrix::Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const vector<float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<vector<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num, const view1D<matrix::Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              tensor::tensor_Dense<float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<vector<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<matrix::Dense<float>, float> &C);
void adds_col(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
              const size_t num,
              const view1D<tensor::tensor_Dense<float>, float> &x,
              view_tensor_Dense<tensor::tensor_Dense<float>, float> &C);
/**@}*/

/**
 * \defgroup tensvec_dense monolish::blas::tensvec (tensor_Dense)
 * @brief tensor_Dense tensor and vector multiplication: y = Ax
 * @{
 */
/**
 * @brief tensor_Dense tensor and vector multiplication: ex. y_{ij} = A_{ijk}
 * x_{k}
 * @param A tensor_Dense tensor
 * @param x monolish vector
 * @param y tensor_Dense tensor
 * @note
 * - # of computation: size
 * - Multi-threading: true
 * - GPU acceleration: true
 *    - # of data transfer: 0
 */
void tensvec(const tensor::tensor_Dense<double> &A, const vector<double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const tensor::tensor_Dense<double> &A, const vector<double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const tensor::tensor_Dense<double> &A, const vector<double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const tensor::tensor_Dense<double> &A, const vector<double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const tensor::tensor_Dense<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x, tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<vector<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x, tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x, tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const vector<double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<double>, double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const tensor::tensor_Dense<float> &A, const vector<float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const tensor::tensor_Dense<float> &A, const vector<float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const tensor::tensor_Dense<float> &A, const vector<float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const tensor::tensor_Dense<float> &A, const vector<float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const tensor::tensor_Dense<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x, tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<vector<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x, tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<matrix::Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x, tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const vector<float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const view_tensor_Dense<tensor::tensor_Dense<float>, float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
/**@}*/

/**
 * \defgroup tensvec_dense monolish::blas::tensvec (tensor_CRS)
 * @brief tensor_Dense tensor and vector multiplication: y = Ax
 * @{
 */
/**
 * @brief tensor_Dense tensor and vector multiplication: ex. y_{ij} = A_{ijk}
 * x_{k}
 * @param A tensor_Dense tensor
 * @param x monolish vector
 * @param y tensor_Dense tensor
 * @note
 * - # of computation: size
 * - Multi-threading: true
 * - GPU acceleration: true
 *    - # of data transfer: 0
 */
void tensvec(const tensor::tensor_CRS<double> &A, const vector<double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const tensor::tensor_CRS<double> &A, const vector<double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const tensor::tensor_CRS<double> &A, const vector<double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const tensor::tensor_CRS<double> &A, const vector<double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<vector<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<matrix::Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             tensor::tensor_Dense<double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<vector<double>, double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<matrix::Dense<double>, double> &y);
void tensvec(const tensor::tensor_CRS<double> &A,
             const view1D<tensor::tensor_Dense<double>, double> &x,
             view_tensor_Dense<tensor::tensor_Dense<double>, double> &y);
void tensvec(const tensor::tensor_CRS<float> &A, const vector<float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const tensor::tensor_CRS<float> &A, const vector<float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const tensor::tensor_CRS<float> &A, const vector<float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const tensor::tensor_CRS<float> &A, const vector<float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<vector<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<matrix::Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             tensor::tensor_Dense<float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<vector<float>, float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<matrix::Dense<float>, float> &y);
void tensvec(const tensor::tensor_CRS<float> &A,
             const view1D<tensor::tensor_Dense<float>, float> &x,
             view_tensor_Dense<tensor::tensor_Dense<float>, float> &y);
/**@}*/
/**@}*/
/**@}*/
} // namespace blas
} // namespace monolish
